### NFT API Endpoints Testing (Environment Variable App IDs)
### Base URL: http://localhost:3000/api/v1/nft

# =======================
# POSITION NFT ENDPOINTS
# =======================

### Mint Position Token (for new investment)
POST http://localhost:3000/api/v1/nft/position/mint
Content-Type: application/json

{
  "userId": "6ed81d5d-d15b-41f1-825c-8eff55a1a9fd",
  "owner": "HXRUDXMK56MZE6ZZ3KGMMQFR2O7YKG4O6K3HPGFQXBLXXHEJTHY3VXGOTU",
  "assetType": 1,
  "holdings": "100000000",
  "purchaseValueUsd": "5000000"
}

### Update Position Token (when holdings change)
PUT http://localhost:3000/api/v1/nft/position/update
Content-Type: application/json

{
  "userId": "6ed81d5d-d15b-41f1-825c-8eff55a1a9fd",
  "positionTokenId": "1",
  "newHoldings": "150000000"
}

### Get Position NFT Contract Stats
GET http://localhost:3000/api/v1/nft/position/stats?userId=6ed81d5d-d15b-41f1-825c-8eff55a1a9fd

### Check if Position Token Exists
GET http://localhost:3000/api/v1/nft/position/1/exists?userId=6ed81d5d-d15b-41f1-825c-8eff55a1a9fd

### Get Position Token Owner
GET http://localhost:3000/api/v1/nft/position/1/owner?userId=6ed81d5d-d15b-41f1-825c-8eff55a1a9fd

### Get Position Token Asset Type
GET http://localhost:3000/api/v1/nft/position/1/asset-type?userId=6ed81d5d-d15b-41f1-825c-8eff55a1a9fd

### Get Position Token Holdings
GET http://localhost:3000/api/v1/nft/position/1/holdings?userId=6ed81d5d-d15b-41f1-825c-8eff55a1a9fd

### Get Position Token Purchase Value
GET http://localhost:3000/api/v1/nft/position/1/purchase-value?userId=6ed81d5d-d15b-41f1-825c-8eff55a1a9fd

### Get All Position Token Data (Convenience Endpoint)
GET http://localhost:3000/api/v1/nft/position/1?userId=6ed81d5d-d15b-41f1-825c-8eff55a1a9fd

### Test Non-Existent Token (Should return exists: false)
GET http://localhost:3000/api/v1/nft/position/999/exists?userId=6ed81d5d-d15b-41f1-825c-8eff55a1a9fd

### Test Multiple Token IDs (Replace with actual minted token IDs)
GET http://localhost:3000/api/v1/nft/position/2?userId=6ed81d5d-d15b-41f1-825c-8eff55a1a9fd

### Get Position Token Purchase Value
GET http://localhost:3000/api/v1/nft/position/3?userId=6ed81d5d-d15b-41f1-825c-8eff55a1a9fd

# =======================
# PORTFOLIO NFT ENDPOINTS
# =======================

### Mint Portfolio Token (for new user)
POST http://localhost:3000/api/v1/nft/portfolio/mint
Content-Type: application/json

{
  "userId": "6ed81d5d-d15b-41f1-825c-8eff55a1a9fd",
  "owner": "HXRUDXMK56MZE6ZZ3KGMMQFR2O7YKG4O6K3HPGFQXBLXXHEJTHY3VXGOTU",
  "level": 1,
  "metadataCid": "QmX54yZjWwsgxh85b78dkmvwfiBST7aT9J5ZiQp856x1jx"
}

### Add Position to Portfolio
POST http://localhost:3000/api/v1/nft/portfolio/add-position
Content-Type: application/json

{
  "userId": "6ed81d5d-d15b-41f1-825c-8eff55a1a9fd",
  "portfolioTokenId": "2",
  "positionTokenId": "2",
  "owner": "HXRUDXMK56MZE6ZZ3KGMMQFR2O7YKG4O6K3HPGFQXBLXXHEJTHY3VXGOTU"
}

### Get Portfolio NFT Contract Stats
GET http://localhost:3000/api/v1/nft/portfolio/stats?userId=6ed81d5d-d15b-41f1-825c-8eff55a1a9fd

### Get Portfolio Position Count
GET http://localhost:3000/api/v1/nft/portfolio/position-count/2?userId=6ed81d5d-d15b-41f1-825c-8eff55a1a9fd

### Get Which Portfolio a Position Belongs To
GET http://localhost:3000/api/v1/nft/portfolio/position-portfolio/1?userId=6ed81d5d-d15b-41f1-825c-8eff55a1a9fd

### Get All Positions in a Portfolio (NEW!)
GET http://localhost:3000/api/v1/nft/portfolio/2/positions?userId=6ed81d5d-d15b-41f1-825c-8eff55a1a9fd

### Get All Positions in Portfolio 1 (if it exists)
GET http://localhost:3000/api/v1/nft/portfolio/1/positions?userId=6ed81d5d-d15b-41f1-825c-8eff55a1a9fd

# =======================
# DEBUG/ADMIN ENDPOINTS
# =======================

### Fund Portfolio NFT Contract (for box storage)
# Uses deployer account with ALGO, not user account  
# Run this before minting portfolio tokens if contract needs funding
POST http://localhost:3000/api/v1/nft/debug/fund-portfolio-contract
Content-Type: application/json

{
  "amount": 100000
}

### Fund Portfolio NFT Contract (default amount)
# Uses default 0.1 ALGO funding amount
POST http://localhost:3000/api/v1/nft/debug/fund-portfolio-contract
Content-Type: application/json

{}

# =======================
# USER-CENTRIC PORTFOLIO APIs (RECOMMENDED)
# =======================

### Get User's Portfolio Info (Discovery)
GET http://localhost:3000/api/v1/users/6ed81d5d-d15b-41f1-825c-8eff55a1a9fd/portfolio

### Get User's Primary Portfolio with Full Details
GET http://localhost:3000/api/v1/users/6ed81d5d-d15b-41f1-825c-8eff55a1a9fd/portfolio/primary

### Get User's Portfolio Positions (User-Friendly)
GET http://localhost:3000/api/v1/users/6ed81d5d-d15b-41f1-825c-8eff55a1a9fd/portfolio/positions

### Create Portfolio for User (Mints NFT + Stores Mapping)
POST http://localhost:3000/api/v1/users/6ed81d5d-d15b-41f1-825c-8eff55a1a9fd/portfolio
Content-Type: application/json

{
  "algorandAddress": "HXRUDXMK56MZE6ZZ3KGMMQFR2O7YKG4O6K3HPGFQXBLXXHEJTHY3VXGOTU",
  "customName": "My Investment Portfolio",
  "level": 1,
  "metadataCid": "QmX54yZjWwsgxh85b78dkmvwfiBST7aT9J5ZiQp856x1jx"
}

### Update Portfolio Name
PUT http://localhost:3000/api/v1/users/6ed81d5d-d15b-41f1-825c-8eff55a1a9fd/portfolio/68eaeb23-8bf3-4422-813c-0b6045ca1961
Content-Type: application/json

{
  "customName": "My Investment Portfolio2"
}

# =======================
# UNIFIED USER INVESTMENT API (RECOMMENDED)
# =======================

### Direct Investment Recording (NFT + Portfolio)
POST http://localhost:3000/api/v1/users/6ed81d5d-d15b-41f1-825c-8eff55a1a9fd/invest
Content-Type: application/json

{
  "algorandAddress": "HXRUDXMK56MZE6ZZ3KGMMQFR2O7YKG4O6K3HPGFQXBLXXHEJTHY3VXGOTU",
  "assetType": 1,
  "holdings": "50000000",
  "purchaseValueUsd": "2500000",
  "portfolioName": "My Bitcoin Stack"
}

### Bitcoin Purchase with MoonPay (Investment Table + NFT + Payment)
POST http://localhost:3000/api/v1/users/6ed81d5d-d15b-41f1-825c-8eff55a1a9fd/invest
Content-Type: application/json

{
  "algorandAddress": "HXRUDXMK56MZE6ZZ3KGMMQFR2O7YKG4O6K3HPGFQXBLXXHEJTHY3VXGOTU",
  "assetType": 1,
  "amountUSD": 100,
  "useMoonPay": true,
  "riskAccepted": true,
  "portfolioName": "My Bitcoin Stack"
}

### Get User's Investment Summary
GET http://localhost:3000/api/v1/users/5f5ee119-9f95-4b86-863c-44944507eced/investments

### Get User's Specific Investment by Position Token ID
GET http://localhost:3000/api/v1/users/6ed81d5d-d15b-41f1-825c-8eff55a1a9fd/investments/1

### Create Multiple Investments (Bitcoin, Algorand, USDC)
POST http://localhost:3000/api/v1/users/6ed81d5d-d15b-41f1-825c-8eff55a1a9fd/invest
Content-Type: application/json

{
  "algorandAddress": "HXRUDXMK56MZE6ZZ3KGMMQFR2O7YKG4O6K3HPGFQXBLXXHEJTHY3VXGOTU",
  "assetType": 2,
  "holdings": "50000000000",
  "purchaseValueUsd": "1000000"
}

###
POST http://localhost:3000/api/v1/users/6ed81d5d-d15b-41f1-825c-8eff55a1a9fd/invest
Content-Type: application/json

{
  "algorandAddress": "HXRUDXMK56MZE6ZZ3KGMMQFR2O7YKG4O6K3HPGFQXBLXXHEJTHY3VXGOTU",
  "assetType": 3,
  "holdings": "250000",
  "purchaseValueUsd": "250000"
}

# =======================
# DEPRECATED APIs (Use Unified User Investment API Instead)
# =======================

### ⚠️ DEPRECATED: Bitcoin Investment API
# Use /users/:userId/invest with useMoonPay: true instead
POST http://localhost:3000/api/v1/investment/bitcoin/initiate
Content-Type: application/json

{
  "userID": "6ed81d5d-d15b-41f1-825c-8eff55a1a9fd",
  "amountUSD": 100,
  "riskAccepted": true,
  "investmentType": "market_buy"
}

### ⚠️ DEPRECATED: Direct NFT Creation
# Use /users/:userId/invest instead
POST http://localhost:3000/api/v1/nft/create-investment
Content-Type: application/json

{
  "userId": "6ed81d5d-d15b-41f1-825c-8eff55a1a9fd",
  "portfolioTokenId": "2",
  "owner": "HXRUDXMK56MZE6ZZ3KGMMQFR2O7YKG4O6K3HPGFQXBLXXHEJTHY3VXGOTU",
  "assetType": 1,
  "holdings": "200000000",
  "purchaseValueUsd": "10000000"
}

# =======================
# ENVIRONMENT SETUP
# =======================

### Required Environment Variables:
# Add to your .env file:
# POSITION_NFT_APP_ID=1001
# PORTFOLIO_NFT_APP_ID=2001

# =======================
# TEST DATA REFERENCE
# =======================

### Asset Types:
# 1 = Bitcoin
# 2 = Algorand  
# 3 = USDC

### Portfolio Levels:
# 1-5 (money tree growth levels)

### Example Test User Setup:
# 1. First create a test user via: POST /api/v1/debug/create-test-user
# 2. Get their Algorand address from wallet
# 3. Replace "ALGORAND_ADDRESS_HERE" with actual address
# 4. Replace "test-user-123" with actual user ID
# 5. Fund the Portfolio contract: POST /api/v1/nft/debug/fund-portfolio-contract

### Example Values:
# holdings: "100000000" = 1 BTC (8 decimal places)
# purchaseValueUsd: "5000000" = $50,000.00 (2 decimal places as cents)
# metadataCid: IPFS CID pointing to JSON metadata with portfolio details

### Position Token Getter Examples:
# Replace "1" with actual token ID from minting response
# GET /api/v1/nft/position/1/exists - Returns: { exists: true/false }
# GET /api/v1/nft/position/1/owner - Returns: { owner: "ALGORAND_ADDRESS", ownerBase64: "base64_bytes" }
# GET /api/v1/nft/position/1/asset-type - Returns: { assetType: "1", assetTypeName: "Bitcoin" }
# GET /api/v1/nft/position/1/holdings - Returns: { holdings: "100000000" }
# GET /api/v1/nft/position/1/purchase-value - Returns: { purchaseValue: "5000000" }
# GET /api/v1/nft/position/1 - Returns all position data in one call

### Portfolio Token Getter Examples:
# Replace "2" with actual portfolio token ID from minting response
# GET /api/v1/nft/portfolio/2/positions - Returns: { portfolioTokenId: "2", positionCount: 3, positions: [...] }
# GET /api/v1/nft/portfolio/position-portfolio/1 - Returns: { portfolioTokenId: "2" } (which portfolio position 1 belongs to)
# GET /api/v1/nft/portfolio/position-count/2 - Returns: { positionCount: "3" }

### Prerequisites:
# - Set POSITION_NFT_APP_ID and PORTFOLIO_NFT_APP_ID in .env
# - Position NFT contract deployed
# - Portfolio NFT contract deployed  
# - Test user created with wallet
# - Algorand localnet running